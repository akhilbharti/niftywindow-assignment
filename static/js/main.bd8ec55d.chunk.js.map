{"version":3,"sources":["reducers/DirectoryReducer.js","reducers/index.js","actions/actionTypes.js","components/Node.js","components/Modal.js","actions/DirectoryAction.js","store/selectors.js","components/FolderStructure.js","App.js","store/configureStore.js","index.js"],"names":["INITIAL_STATE","directoryTree","/","children","childInfo","path","TimeOfCreation","Date","now","isRoot","pwd","getUpdatedDirectoryTree","oldDirTree","directoryToAdd","newTree","_","cloneDeep","length","Object","objectSpread","slice","toString","split","join","parentDir","get","rootReducer","combineReducers","DirectoryReducer","state","arguments","undefined","action","type","payload","concat","toConsumableArray","Node","_ref","name","onClick","className","react_default","a","createElement","event","class","aria-hidden","isEmpty","renderChildren","keys","map","dirName","StyledNode","key","meta","styled","_templateObject","Modal","closeModal","title","toggleModal","successAction","successActionText","successActionDisabled","disabled","DirectoryStructure","toggleChild","createNewDirectory","directory","push","defineProperty","AddtoCurrentDirectory","RemoveFromCurrentDirectory","getFullDirectoryTree","getPWD","getCurrentDirectoryTree","createSelector","treeToRender","isAtRoot","pwdDisplayText","getDirNamesAtCurrentPath","ErrorMessageHandlerModal","div","FolderStructure_templateObject","FolderStructure","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setPresentWorkingDirectory","e","preventDefault","_this$props","goBack","directoryName","showModal","setState","onDirectoryNameChange","target","value","removeDirectory","_this2","components_Node","dirNamesAtCurrentPath","isNameAlreadyPresent","forEach","toLowerCase","match","_this$props2","_this$state","tooltip","renderBackBtn","renderCurrentDirectoryTree","components_Modal","renderErrorMessage","onChange","Component","compose","connect","console","log","dispatch","bindActionCreators","store","middleware","thunk","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","apply","configureStore","App","es","src_components_FolderStructure","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.bd8ec55d.chunk.js","sourcesContent":["import _ from \"lodash\";\nimport {\n  CREATE_DIRECTORY,\n  PUSH_TO_PWD,\n  POP_FROM_PWD,\n  REMOVE_DIRECTORY\n} from \"../actions/actionTypes\";\n\nconst INITIAL_STATE = {\n  directoryTree: {\n    \"/\": {\n      children: {},\n      childInfo: {\n        path: [\"/\"],\n        TimeOfCreation: Date.now(),\n        isRoot: true\n      }\n    }\n  },\n  pwd: [\"/\"]\n};\n\nconst getUpdatedDirectoryTree = (oldDirTree, directoryToAdd, pwd) => {\n  let newTree = _.cloneDeep(oldDirTree);\n  if (pwd.length === 1 && pwd[0] === \"/\") {\n    newTree[\"/\"].children = { ...newTree[\"/\"].children, ...directoryToAdd };\n    return newTree;\n  }\n\n  let path = pwd.slice(0).toString();\n  path = path.split(\",\").join(\".children.\");\n  let parentDir = _.get(newTree, path);\n  parentDir.children = { ...parentDir.children, ...directoryToAdd };\n\n  return newTree;\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CREATE_DIRECTORY:\n      return {\n        ...state,\n        directoryTree: getUpdatedDirectoryTree(\n          state.directoryTree,\n          action.payload,\n          state.pwd\n        )\n      };\n\n    case PUSH_TO_PWD:\n      return {\n        ...state,\n        pwd: [...state.pwd, action.payload]\n      };\n\n    case POP_FROM_PWD:\n      return {\n        ...state,\n        pwd: [...state.pwd.slice(0, state.pwd.length - 1)]\n      };\n\n    case REMOVE_DIRECTORY:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport DirectoryReducer from \"./DirectoryReducer\";\n\nconst rootReducer = combineReducers({\n  DirectoryReducer\n});\n\nexport default rootReducer;\n","export const CREATE_DIRECTORY = \"CREATE_DIRECTORY\";\n\nexport const PUSH_TO_PWD = \"UPDATE_PWD\";\n\nexport const POP_FROM_PWD = \"POP_FROM_PWD\";\n\nexport const REMOVE_DIRECTORY = \"REMOVE_DIRECTORY\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport _ from \"lodash\";\n\nconst Node = ({ name, children, onClick, className }) => {\n  return (\n    <div>\n      <div onClick={event => onClick(name, event)} className={className}>\n        <i class=\"fa fa-folder\" aria-hidden=\"true\" />\n        <span>{name}</span>\n        {!_.isEmpty(children) ? renderChildren(children, onClick) : null}\n      </div>\n    </div>\n  );\n};\n\nconst renderChildren = (children, onClick) => {\n  let childNodes = Object.keys(children).map(dirName => {\n    return (\n      <StyledNode\n        key={children[dirName].childInfo.TimeOfCreation}\n        name={dirName}\n        meta={children[dirName].childInfo}\n        onClick={onClick}\n      />\n    );\n  });\n\n  return childNodes;\n};\n\nconst StyledNode = styled(Node)`\n  margin-left: 16px;\n  cursor:pointer span {\n    margin-left: 8px;\n  }\n`;\n\nNode.propTypes = {\n  name: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  className: PropTypes.string.isRequired,\n  children: PropTypes.object\n};\n\nexport default Node;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Modal = ({ children, closeModal, title, toggleModal, successAction, \n  successActionText, successActionDisabled }) => {\n\n  if (!toggleModal) {\n    return null;\n  }\n  \n  return (\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" onClick={closeModal} />\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">{title}</p>\n          <button className=\"delete\" onClick={closeModal} />\n        </header>\n        <section className=\"modal-card-body\">\n          <div className=\"content\">\n            {children}\n          </div>\n        </section>\n        <footer className=\"modal-card-foot\">\n          <button className=\"button\" onClick={closeModal}>Cancel</button>\n          <button \n            className=\"button\" \n            onClick={successAction}\n            disabled={successActionDisabled}>\n              {successActionText}\n          </button>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  toggleModal: PropTypes.bool.isRequired,\n  title: PropTypes.string,\n  children: PropTypes.array,\n  successAction: PropTypes.func.isRequired,\n  successActionText: PropTypes.string.isRequired,\n  successActionDisabled: PropTypes.bool,\n};\n\nexport default Modal;","import _ from \"lodash\";\nimport {\n  CREATE_DIRECTORY,\n  PUSH_TO_PWD,\n  POP_FROM_PWD,\n  REMOVE_DIRECTORY\n} from \"./actionTypes\";\n\nconst DirectoryStructure = {\n  children: {},\n  childInfo: {\n    TimeOfCreation: \"\",\n    toggleChild: false,\n    path: \"\"\n  }\n};\n\nconst createNewDirectory = (dirName, pwd) => {\n  let directory = _.cloneDeep(DirectoryStructure);\n  directory.childInfo.TimeOfCreation = Date.now();\n  directory.childInfo.path = pwd.slice();\n  directory.childInfo.path.push(dirName);\n  return {\n    type: CREATE_DIRECTORY,\n    payload: { [dirName]: directory }\n  };\n};\n\nconst AddtoCurrentDirectory = (dirName, pwd) => {\n  let currentDirectory = pwd.slice(pwd.length - 1)[0];\n  if (currentDirectory === dirName) {\n    return {\n      type: null\n    };\n  }\n\n  return {\n    type: PUSH_TO_PWD,\n    payload: dirName\n  };\n};\n\nconst RemoveFromCurrentDirectory = () => {\n  return { type: POP_FROM_PWD };\n};\n\nconst removeDirectory = () => {\n  return { type: REMOVE_DIRECTORY };\n};\n\nexport {\n  createNewDirectory,\n  AddtoCurrentDirectory,\n  RemoveFromCurrentDirectory,\n  removeDirectory\n};\n","import { createSelector } from \"reselect\";\nimport _ from \"lodash\";\n\nconst getFullDirectoryTree = state => state.directoryTree;\n\nconst getPWD = state => state.pwd;\n\nconst getCurrentDirectoryTree = createSelector(\n  getFullDirectoryTree,\n  getPWD,\n  (directoryTree, pwd) => {\n    let treeToRender = _.cloneDeep(directoryTree);\n    let path = pwd.slice().toString();\n    path = path.split(\",\").join(\".children.\");\n    return { [pwd.slice(pwd.length - 1)]: _.get(treeToRender, path) };\n  }\n);\n\nconst isAtRoot = createSelector(\n  getPWD,\n  pwd => pwd.length === 1 && pwd[0] === \"/\"\n);\n\nconst pwdDisplayText = createSelector(\n  getPWD,\n  pwd => {\n    return (\n      pwd[0] +\n      pwd\n        .slice(1)\n        .toString()\n        .split(\",\")\n        .join(\" / \")\n    );\n  }\n);\n\nconst getDirNamesAtCurrentPath = createSelector(\n  getFullDirectoryTree,\n  getPWD,\n  (directoryTree, pwd) => {\n    let treeToRender = _.cloneDeep(directoryTree);\n    let path = pwd.slice().toString();\n    path = path.split(\",\").join(\".children.\");\n    let { children } = _.get(treeToRender, path);\n    return Object.keys(children);\n  }\n);\n\nexport {\n  getCurrentDirectoryTree,\n  isAtRoot,\n  pwdDisplayText,\n  getDirNamesAtCurrentPath\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { compose, bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Node from \"./Node\";\nimport Modal from \"./Modal\";\nimport {\n  createNewDirectory,\n  AddtoCurrentDirectory,\n  RemoveFromCurrentDirectory\n} from \"../actions/DirectoryAction\";\nimport {\n  getCurrentDirectoryTree,\n  isAtRoot,\n  pwdDisplayText,\n  getDirNamesAtCurrentPath\n} from \"../store/selectors\";\nimport \"./FolderStructure.css\";\n\nconst ErrorMessageHandlerModal = styled.div`\n  color: red;\n  font-size: 1rem;\n`;\n\nclass FolderStructure extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggleModal: false,\n      directoryName: \"\"\n    };\n  }\n\n  setPresentWorkingDirectory = (dirName, e) => {\n    e.preventDefault();\n    const { AddtoCurrentDirectory, pwd } = this.props;\n    AddtoCurrentDirectory(dirName, pwd);\n  };\n\n  goBack = () => {\n    this.props.RemoveFromCurrentDirectory();\n  };\n\n  createNewDirectory = () => {\n    const { directoryName } = this.state;\n    const { pwd } = this.props;\n    this.props.createNewDirectory(directoryName, pwd);\n    this.closeModal();\n  };\n\n  showModal = () => {\n    this.setState({ toggleModal: true });\n  };\n\n  closeModal = () => {\n    this.setState({ toggleModal: false, directoryName: \"\" });\n  };\n\n  onDirectoryNameChange = event => {\n    this.setState({ directoryName: event.target.value });\n  };\n\n  removeDirectory = event => {\n    this.props.removeDirectory();\n  };\n\n  renderBackBtn() {\n    return (\n      <span className=\"Actionbutton\" onClick={this.goBack}>\n        <i class=\"fa fa-long-arrow-left\" aria-hidden=\"true\" />\n      </span>\n    );\n  }\n\n  renderCurrentDirectoryTree(directory) {\n    let nodes = Object.keys(directory).map(dirName => {\n      return (\n        <Node\n          key={directory[dirName].childInfo.TimeOfCreation}\n          name={dirName}\n          children={directory[dirName].children}\n          meta={directory[dirName].childInfo}\n          onClick={this.setPresentWorkingDirectory}\n        />\n      );\n    });\n\n    return nodes;\n  }\n\n  renderErrorMessage() {\n    const { dirNamesAtCurrentPath } = this.props;\n    const { directoryName } = this.state;\n    const regex = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/;\n    let isNameAlreadyPresent = false;\n\n    dirNamesAtCurrentPath.forEach(name => {\n      if (!isNameAlreadyPresent && name) {\n        isNameAlreadyPresent =\n          name.toLowerCase() === directoryName.toLowerCase();\n      }\n    });\n\n    if (isNameAlreadyPresent) {\n      return (\n        <ErrorMessageHandlerModal>\n          uh-oh ! You already have a folder named. \"{directoryName}\"\n        </ErrorMessageHandlerModal>\n      );\n    }\n\n    if (directoryName.match(regex)) {\n      return (\n        <ErrorMessageHandlerModal>\n          uh-oh ! Special characters are not allowed. \"{directoryName}\"\n        </ErrorMessageHandlerModal>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const { directory, pwdDisplayText, isAtRoot } = this.props;\n    const { toggleModal, directoryName } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"header\">Directory Structure Implementation</div>\n        <div className=\"columns\">\n          <div className=\"column is-three-fifths\">\n            Currently In: {pwdDisplayText}\n          </div>\n          <div className=\"buttons column\">\n            <span className=\"Actionbutton\" onClick={this.showModal}>\n              <i\n                class=\"fa fa-plus-square-o\"\n                tooltip=\"New Folder\"\n                aria-hidden=\"true\"\n              />\n            </span>\n            {/* <span className=\"Actionbutton\" onClick={this.removeDirectory}>\n              <i class=\"fa fa-minus-square-o\" aria-hidden=\"true\" />\n            </span> */}\n            {!isAtRoot ? this.renderBackBtn() : null}\n          </div>\n        </div>\n\n        {this.renderCurrentDirectoryTree(directory)}\n        <Modal\n          closeModal={this.closeModal}\n          toggleModal={toggleModal}\n          title=\"Enter directory name\"\n          successAction={this.createNewDirectory}\n          successActionText=\"Create\"\n          successActionDisabled={this.renderErrorMessage() != null}\n        >\n          <input\n            className=\"input\"\n            type=\"text\"\n            value={directoryName}\n            onChange={this.onDirectoryNameChange}\n          />\n          {this.renderErrorMessage()}\n        </Modal>\n      </div>\n    );\n  }\n}\n\nFolderStructure.propTypes = {\n  createNewDirectory: PropTypes.func.isRequired,\n  AddtoCurrentDirectory: PropTypes.func.isRequired,\n  RemoveFromCurrentDirectory: PropTypes.func.isRequired,\n  pwd: PropTypes.array.isRequired,\n  directory: PropTypes.object.isRequired,\n  isAtRoot: PropTypes.bool.isRequired,\n  pwdDisplayText: PropTypes.string.isRequired,\n  dirNamesAtCurrentPath: PropTypes.array.isRequired\n};\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      createNewDirectory,\n      AddtoCurrentDirectory,\n      RemoveFromCurrentDirectory\n    },\n    dispatch\n  );\n\nconst mapStateToProps = state => {\n  const { DirectoryReducer } = state;\n  console.log(DirectoryReducer);\n  const { pwd } = state.DirectoryReducer;\n  return {\n    directory: getCurrentDirectoryTree(DirectoryReducer),\n    pwd,\n    isAtRoot: isAtRoot(DirectoryReducer),\n    pwdDisplayText: pwdDisplayText(DirectoryReducer),\n    dirNamesAtCurrentPath: getDirNamesAtCurrentPath(DirectoryReducer)\n  };\n};\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(FolderStructure);\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store/configureStore\";\nimport FolderStructure from \"./components/FolderStructure\";\nimport \"./App.css\";\n\nconst store = configureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <FolderStructure />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport thunk from \"redux-thunk\";\n\nexport default function configureStore() {\n  const middleware = [thunk];\n  //redux dev tool integration\n  const composeEnhancer =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  return createStore(\n    rootReducer,\n    composeEnhancer(applyMiddleware(...middleware))\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css'\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}